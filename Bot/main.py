import telebot
import config
from art import *

Art = text2art("BOT STARTED", font="random")
print(Art)

bot = telebot.TeleBot(config.TOKEN, parse_mode='html')

requests_dict = {
    "Technologies": config.technologies_request,
    "Geography": config.geography_request,
    "Science": config.science_request,
    "History": config.history_request,
    "Culture": config.culture_request,
    "Geology": config.geology_request
}

start_buttons = ["Fact with image", "Fact without image"]


def send_fact(chat_id, photo_path, caption):
    with open(photo_path, 'rb') as photo:
        bot.send_photo(chat_id, photo=photo, caption=caption + "\n\n<code>The following fact was generated by the AI ChatGPT 3.5 </code>\n<code>The following image was generated by the AI DALLÂ·E 2</code>\n\nSelect the mode again:  /start", parse_mode='html')


class UserState:
    def __init__(self):
        self.is_choosing_mode = False
        self.is_choosing_category = False
        self.selected_mode = None
        self.selected_category = None


user_state_dict = {}


@bot.message_handler(commands=['start'])
def welcome(message):
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
    buttons = [telebot.types.KeyboardButton(name) for name in start_buttons]
    markup.add(*buttons)

    bot.send_message(message.chat.id, config.hi, parse_mode='html', reply_markup=markup)
    bot.send_message(message.chat.id, "Choose the mode", parse_mode='html', reply_markup=markup)
    user_state = UserState()
    user_state.is_choosing_mode = True
    user_state_dict[message.chat.id] = user_state


@bot.message_handler(content_types=['text'])
def text(message):
    user_state = user_state_dict.get(message.chat.id)
    if not user_state:
        user_state = UserState()
        user_state_dict[message.chat.id] = user_state

    if message.chat.type == "private":
        if user_state.is_choosing_mode:
            if message.text in start_buttons:
                user_state.selected_mode = message.text
                user_state.is_choosing_mode = False
                user_state.is_choosing_category = True
                markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
                buttons = [telebot.types.KeyboardButton(name) for name in requests_dict.keys()]
                markup.add(*buttons)
                bot.send_message(message.chat.id, "Select the category", parse_mode='html', reply_markup=markup)
        elif user_state.is_choosing_category:
            if message.text in requests_dict.keys():
                user_state.selected_category = message.text
                user_state.is_choosing_category = False
                bot.send_message(message.chat.id, f"Selected category: {user_state.selected_category}")
                if user_state.selected_mode == "Fact without image":
                    text_n(message, user_state)
                else:
                    text_i(message, user_state)
                user_state.is_choosing_category = True
                user_state.selected_category = None


def text_n(message, user_state):
    if message.chat.type == "private":
        request = requests_dict.get(user_state.selected_category)
        if request:
            bot.send_message(message.chat.id, "Generating fact...")
            text = config.fact(request)
            bot.send_message(message.chat.id, text + "\n\n<code>The following fact was generated by the AI ChatGPT 3.5 </code>\n\nSelect the mode again:  /start", parse_mode='html')


def text_i(message, user_state):
    if message.chat.type == "private":
        request = requests_dict.get(user_state.selected_category)
        if request:
            bot.send_message(message.chat.id, "Generating fact and image...")
            photo, caption = config.fact_image(request)
            send_fact(message.chat.id, photo, caption)


bot.polling(none_stop=True)

